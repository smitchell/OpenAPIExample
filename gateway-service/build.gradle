plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
//	https://github.com/asciidoctor/asciidoctor-gradle-plugin
    id 'org.asciidoctor.jvm.convert' version '3.3.0'
    id 'org.asciidoctor.jvm.pdf' version '3.3.0'
//	https://github.com/springdoc/springdoc-openapi-gradle-plugin
    id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.3.0'
//	https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-gradle-plugin
	id 'org.openapi.generator' version '5.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.7.0'
    aspectjVersion = '1.9.6'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'io.swagger', name: 'swagger-core', version: '1.6.2'
    runtimeOnly 'com.h2database:h2'
    runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    implementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    implementation("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    implementation("org.aspectj:aspectjrt:${aspectjVersion}")
    implementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

// ./gradlew clean generateOpenApiDocs
openApi {
    outputDir.set(file("$projectDir/src/main/resources/static/docs/".toString()))
    outputFileName.set("openapi.json")
    waitTimeInSeconds.set(10)
}

openApiGenerate {
    generatorName = "java"
    inputSpec = "$projectDir/src/main/resources/static/docs/openapi.json".toString()
    outputDir = "$buildDir/generated".toString()
    validateSpec = true
}

